{"ast":null,"code":"import Todo from\"../models/todo\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const TodosContext=/*#__PURE__*/React.createContext({items:[],addTodo:()=>{},removeTodo:id=>{}});const TodosContextProvider=_ref=>{let{children}=_ref;const[todos,setTodos]=useState([]);const addTodoHandle=text=>{const newTodo=new Todo(text);setTodos(currentTodos=>{return currentTodos.concat(newTodo);});};const removeTodo=todoId=>{setTodos(prevTodos=>{return prevTodos.filter(todo=>todo.id!==todoId);});};const contextValue={items:todos,addTodo:addTodoHandle,removeTodo:removeTodo};return/*#__PURE__*/_jsx(TodosContext.Provider,{value:contextValue,children:children});};export default TodosContextProvider;","map":{"version":3,"names":["Todo","React","useState","jsx","_jsx","TodosContext","createContext","items","addTodo","removeTodo","id","TodosContextProvider","_ref","children","todos","setTodos","addTodoHandle","text","newTodo","currentTodos","concat","todoId","prevTodos","filter","todo","contextValue","Provider","value"],"sources":["C:/Users/alami/react/07-react-ts-starting-project/src/store/todos-context.tsx"],"sourcesContent":["import Todo from \"../models/todo\";\r\nimport React, { useState, ReactNode } from \"react\";\r\n\r\nexport const TodosContext = React.createContext<{\r\n  items: Todo[];\r\n  addTodo: (text: string) => void;\r\n  removeTodo: (id: string) => void;\r\n}>({\r\n  items: [],\r\n  addTodo: () => {},\r\n  removeTodo: (id: string) => {}\r\n});\r\n\r\ninterface TodosContextProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst TodosContextProvider: React.FC<TodosContextProviderProps> = ({ children }) => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n  const addTodoHandle = (text: string) => {\r\n    const newTodo = new Todo(text);\r\n    setTodos((currentTodos) => {\r\n      return currentTodos.concat(newTodo);\r\n    });\r\n  };\r\n\r\n  const removeTodo = (todoId: string) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.filter((todo) => todo.id !== todoId);\r\n    });\r\n  };\r\n\r\n  const contextValue = {\r\n    items: todos,\r\n    addTodo: addTodoHandle,\r\n    removeTodo: removeTodo\r\n  };\r\n\r\n  return <TodosContext.Provider value={contextValue}>{children}</TodosContext.Provider>;\r\n};\r\n\r\nexport default TodosContextProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,MAAO,MAAM,CAAAC,YAAY,cAAGJ,KAAK,CAACK,aAAa,CAI5C,CACDC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAEA,CAAA,GAAM,CAAC,CAAC,CACjBC,UAAU,CAAGC,EAAU,EAAK,CAAC,CAC/B,CAAC,CAAC,CAMF,KAAM,CAAAC,oBAAyD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7E,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAS,EAAE,CAAC,CAE9C,KAAM,CAAAc,aAAa,CAAIC,IAAY,EAAK,CACtC,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAlB,IAAI,CAACiB,IAAI,CAAC,CAC9BF,QAAQ,CAAEI,YAAY,EAAK,CACzB,MAAO,CAAAA,YAAY,CAACC,MAAM,CAACF,OAAO,CAAC,CACrC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAT,UAAU,CAAIY,MAAc,EAAK,CACrCN,QAAQ,CAAEO,SAAS,EAAK,CACtB,MAAO,CAAAA,SAAS,CAACC,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACd,EAAE,GAAKW,MAAM,CAAC,CACvD,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,YAAY,CAAG,CACnBlB,KAAK,CAAEO,KAAK,CACZN,OAAO,CAAEQ,aAAa,CACtBP,UAAU,CAAEA,UACd,CAAC,CAED,mBAAOL,IAAA,CAACC,YAAY,CAACqB,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAZ,QAAA,CAAEA,QAAQ,CAAwB,CAAC,CACvF,CAAC,CAED,cAAe,CAAAF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}